{
  "data": {
    "_id": "default/scriptConfigurations/9b5bc69c-48be-4bc9-91e4-bb36f2a81a7d",
    "_type": {
      "_id": "ScriptingService",
      "collection": false,
      "name": "ScriptingService"
    },
    "context": "AUTHENTICATION_TREE_DECISION_NODE",
    "createdBy": "null",
    "creationDate": "0",
    "description": "null",
    "evaluatorVersion": "V1_0",
    "language": "JAVASCRIPT",
    "lastModifiedBy": "null",
    "lastModifiedDate": "0",
    "name": "Maintenance-Banner-Script",
    "script": "/*\n  - Data made available by nodes that have already executed are available in the sharedState variable.\n  - The script should set outcome to either \"true\" or \"false\".\n */\nvar fr = JavaImporter(\n    org.forgerock.openam.auth.node.api,\n    javax.security.auth.callback.TextOutputCallback,\n    javax.security.auth.callback.ConfirmationCallback,\n    java.util.ArrayList,\n    org.forgerock.json.JsonValue,\n    java.lang.Integer\n);\n\nlogger.error(\"header: \" + requestHeaders.get(\"Accept-Language\"));\n\nwith (fr) {\n    var cbList = ArrayList();\n    var jsonMessage = {};\n\n    var acceptLanguageHeader = requestHeaders.get(\"Accept-Language\");\n\n      if (acceptLanguageHeader !== null && acceptLanguageHeader.get(0) == \"ar\") {\n          jsonMessage.msg = \"\u0628\u0633\u0628\u0628 \u0623\u0639\u0645\u0627\u0644 \u0627\u0644\u0635\u064a\u0627\u0646\u0629 \u0627\u0644\u0645\u062c\u062f\u0648\u0644\u0629\u060c \u0627\u0644\u062e\u062f\u0645\u0627\u062a \u063a\u064a\u0631 \u0645\u062a\u0648\u0641\u0631\u0629 \u0641\u064a \u0627\u0644\u0648\u0642\u062a \u0627\u0644\u062d\u0627\u0644\u064a. \u064a\u0631\u062c\u0649 \u0627\u0644\u0632\u064a\u0627\u0631\u0629 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649 \u0641\u064a \u0648\u0642\u062a \u0644\u0627\u062d\u0642. \u0648\u0646\u062d\u0646 \u0646\u0639\u062a\u0630\u0631 \u0639\u0646 \u0627\u0644\u0625\u0632\u0639\u0627\u062c..\";\n          jsonMessage.code = 999;\n      } else {\n          jsonMessage.msg = \"Due to scheduled maintenance activity, services are not available at the moment. Please visit back later. We apologize for the inconvenience.\";\n          jsonMessage.code = 998;\n      }\n\n      jsonMessage.code = Integer.valueOf(jsonMessage.code);\n\n      if (callbacks.isEmpty()) {\n          logger.error(\"callback empty start\");\n          cbList.add(new TextOutputCallback(0, JsonValue.json(jsonMessage)));\n          cbList.add(new ConfirmationCallback(\" \", 0, [\"Yes\", \"No\"], 1));\n\n          action = Action.send(cbList).build();\n          logger.error(\"callback empty end\");\n        } else {\n    outcome = \"true\";\n}\n}"
  },
  "metadata": {
    "entityId": "default/scriptConfigurations/9b5bc69c-48be-4bc9-91e4-bb36f2a81a7d",
    "entityType": "ScriptingService",
    "objectClass": [
      "sunServiceComponent",
      "top"
    ],
    "ou": [
      "9b5bc69c-48be-4bc9-91e4-bb36f2a81a7d"
    ],
    "pathParams": {},
    "realm": "/preprod-Customers",
    "sunServiceID": "scriptConfiguration",
    "uid": "ou=9b5bc69c-48be-4bc9-91e4-bb36f2a81a7d,ou=scriptConfigurations,ou=default,ou=OrganizationConfig,ou=1.0,ou=ScriptingService,ou=services,o=preprod-Customers,ou=services,ou=am-config"
  }
}